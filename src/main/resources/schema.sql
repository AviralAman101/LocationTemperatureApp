CREATE SEQUENCE PUBLIC.USER_SEQUENCE START WITH 1;
CREATE SEQUENCE PUBLIC.PROVIDER_SEQUENCE START WITH 1;

CREATE CACHED TABLE PUBLIC.T_USER(
    ID BIGINT NOT NULL,
    FIRST_NAME VARCHAR(255),
    LAST_NAME VARCHAR(255),
    PRIMARY KEY(ID)
);

CREATE CACHED TABLE PUBLIC.T_PREFERENCE(
    CITY VARCHAR(255) NOT NULL,
    STATE VARCHAR(255) NOT NULL,
    USER_ID BIGINT NOT NULL,
    NOTIFY_CYCLE_MINS BIGINT NOT NULL,
    IS_SMS_ACTIVE VARCHAR(1),
    IS_MAIL_ACTIVE VARCHAR(1),
    IS_APP_NOTIFY_ACTIVE VARCHAR(1),
    THRESHOLD BIGINT NOT NULL,
    LAST_NOTIFIED TIMESTAMP DEFAULT NOW(),
    PRIMARY KEY(CITY, STATE, USER_ID)
);

CREATE CACHED TABLE PUBLIC.T_TEMPERATURE(
    CITY VARCHAR(255),
    PROVIDER_ID BIGINT NOT NULL,
    CODE VARCHAR(255),
    CREDITS VARCHAR(255),
    STATE VARCHAR(255),
    VISIBILITY_MILES VARCHAR(255),
    WIND_MPH VARCHAR(255),
    TEMP_C BIGINT,
    TEMP_F BIGINT,
    RELATIVE_HUMIDITY BIGINT,
    WIND_DIR VARCHAR(255),
    PRIMARY KEY(CITY, STATE, PROVIDER_ID)
);

CREATE CACHED TABLE PUBLIC.T_PROVIDER(
    PROVIDER_ID BIGINT NOT NULL,
    PROVIDER_NAME VARCHAR(255),
    URI VARCHAR(255),
    PRIMARY KEY(PROVIDER_ID)
);

CREATE VIEW TEMPERATURE_AGGREGATE_V
 AS
SELECT SUM(LOC.TEMP_C)/COUNT(LOC.TEMP_C) AS TEMP_C ,SUM(LOC.TEMP_F)/COUNT(LOC.TEMP_F) AS TEMP_F
    , SUM(LOC.RELATIVE_HUMIDITY)/COUNT(LOC.RELATIVE_HUMIDITY) AS RELATIVE_HUMIDITY,
    LOC.CITY, LOC.STATE
    FROM T_TEMPERATURE AS LOC
    GROUP BY LOC.CITY, LOC.state;

CREATE VIEW EXCEEDED_TEMP_V AS
    SELECT PR.CITY, PR.STATE, PR.USER_ID,PR.NOTIFY_CYCLE_MINS, PR.IS_SMS_ACTIVE, IS_MAIL_ACTIVE,IS_APP_NOTIFY_ACTIVE, PR.THRESHOLD,
    TAV.TEMP_C, TAV.TEMP_F, TAV.RELATIVE_HUMIDITY FROM T_PREFERENCE PR JOIN TEMPERATURE_AGGREGATE_V TAV
    ON PR.CITY=TAV.CITY AND PR.STATE=TAV.STATE WHERE PR.THRESHOLD < TAV.TEMP_C AND timestampadd('minute', PR.NOTIFY_CYCLE_MINS,PR.LAST_NOTIFIED) < now()